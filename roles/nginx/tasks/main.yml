---
- name: Validate distribution and role variables
  ansible.builtin.include_tasks: "{{ role_path }}/tasks/validate/validate.yml"
  tags: nginx_validate

- name: Set up prerequisites
  ansible.builtin.include_tasks: "{{ role_path }}/tasks/prerequisites/prerequisites.yml"
  when: nginx_state != 'absent'
  tags: nginx_prerequisites

# Setup/install tasks.
- include_tasks: setup-RedHat.yml
  when: ansible_os_family == 'RedHat'

- name: "{{ nginx_setup | capitalize }} NGINX"
  when: nginx_enable | bool
  tags: nginx_enable
  block:
    - name: "{{ nginx_setup | capitalize }} NGINX Open Source"
      ansible.builtin.include_tasks: "{{ role_path }}/tasks/opensource/install-oss.yml"
      when: nginx_type == 'opensource'
      tags: nginx_install_oss

    - name: Set up NGINX Plus license
      ansible.builtin.include_tasks: "{{ role_path }}/tasks/plus/setup-license.yml"
      when:
        - nginx_type == 'plus'
        - nginx_setup_license | bool
      tags: nginx_setup_license

    - name: "{{ nginx_setup | capitalize }} NGINX Plus"
      ansible.builtin.include_tasks: "{{ role_path }}/tasks/plus/install-{{ ansible_facts['os_family'] | lower }}.yml"
      when: nginx_type == 'plus'
      tags: nginx_install_plus

    - name: "{{ nginx_setup | capitalize }} NGINX dynamic modules"
      ansible.builtin.include_tasks: "{{ role_path }}/tasks/modules/install-modules.yml"
      when:
        - nginx_modules is defined
        - nginx_modules | length > 0
      tags: nginx_install_modules

    - name: Remove NGINX Plus license
      ansible.builtin.include_tasks: "{{ role_path }}/tasks/plus/remove-license.yml"
      when:
        - nginx_type == 'plus'
        - nginx_remove_license | bool
      tags: nginx_remove_license

    - name: Modify systemd parameters
      ansible.builtin.include_tasks: "{{ role_path }}/tasks/config/modify-systemd.yml"
      when:
        - ansible_facts['service_mgr'] == 'systemd'
        - nginx_service_modify | bool
      tags: nginx_modify_systemd


- name: set websevers name in /etc/hosts
  become: yes
  blockinfile:
    path: /etc/hosts
    block: |
    {{item.ip}} {{item.name}}

  loop:
    - {name: web1, ip:172.31.90.208}
    - {name: web2, ip:172.31.86.154}


# Nginx setup.
- name: Copy nginx configuration in place.
  become: true
  template:
    src: "{{ nginx_conf_template }}"
    dest: "{{ nginx_conf_file_path }}"
    owner: root
    group: "{{ root_group }}"
    mode: 0644
  notify:
    - reload nginx

- name: Ensure nginx service is running as configured.
  become: true
  service:
    name: nginx
    state: "{{ nginx_service_state }}"
    enabled: "{{ nginx_service_enabled }}"
